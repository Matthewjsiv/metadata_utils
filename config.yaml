---
launch:
  super_odometry:
    type: slam
    launch_cmd: "roslaunch super_odometry yamaha.launch"
    launch_delay: 1.0

  lidar_mapping:
    type: perception
    launch_cmd: "roslaunch physics_atv_lidar_mapping local_mapping_lidar.launch"
    launch_delay: 2.0

  lethal_height_costmapping:
    type: perception
    launch_cmd: "roslaunch physics_atv_lidar_mapping lethal_height_costmap_yamaha.launch"
    launch_delay: 3.0

  mppi:
    type: controls
    launch_cmd: "roslaunch torch_mpc mppi.launch"
    launch_delay: 4.0

  rviz:
    type: viz
    launch_cmd: "rosrun rviz rviz"
    launch_delay: 0.0

  velodynes:
    type: sensors
    launch_cmd: "roslaunch velodyne_launch velodyne_transformed"
    launch_delay: 0.0

  waypoint_manager:
    type: platform
    launch_cmd: "roslaunch yamaha_gps_utils waypoints.launch"
    launch_delay: 0.0

other:
  record:
    type: data_collect
    launch_cmd: "rosbag record -a"
    launch_delay: 5.0
  live_notes:
    type: data_collect
    launch_cmd: "python3 live_notes.py"

#topic(s) to check for to know whether sensor is in bag
sensors:
  #should this be camera or multisense
  multisense:
    - '/multisense/right/image_rect'
    - '/multisense/left/image_rect'
  velodyne_1:
    - '/velodyne_1/velodyne_points'
  velodyne_2:
    - '/velodyne_2/velodyne_points'
  novatel:
    - '/odometry/filtered_odom'
    - '/novatel/imu/data'
intervention: '/mux/intervention'
keywords:
  context:
    - collect
    - test
    - learning_physics
    - sara
  condition:
    - sunny
    - snowy
    - muddy
