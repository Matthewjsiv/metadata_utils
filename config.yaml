---
launch:
  super_odometry:
    type: slam
    launch_cmd: "roslaunch super_odometry yamaha.launch"
    launch_delay: 1.0
    respawn: true

  tartanvo:
    type: slam
    launch_cmd: "roslaunch physics_atv_deep_stereo_vo multisense_register_localmapping.launch"
    launch_delay: 1.0

  lidar_mapping:
    type: perception
    launch_cmd: "roslaunch physics_atv_lidar_mapping local_mapping_lidar.launch"
    launch_delay: 7.0
    respawn: true

  pointcloud_colorization:
    type: perception
    launch_cmd: "roslaunch pointcloud_colorization colorize_pcl.launch"
    launch_delay: 1.0

  lethal_height_costmapping:
    type: perception
    launch_cmd: "roslaunch physics_atv_lidar_mapping lethal_height_costmap_yamaha.launch"
    launch_delay: 7.0

  cvar_maxent_irl:
    type: perception
    launch_cmd: "roslaunch maxent_irl_maps cvar_maxent_irl_yamaha.launch"
    launch_delay: 7.0

  hdif:
    type: perception
    launch_cmd: "rosrun physics_atv_hdif hdif_fullmap_node.py"
    launch_delay: 7.0

  speed_adaptation:
    type: learning
    launch_cmd: "roslaunch context_adaptation speed_adaptation.launch"
    launch_delay: 1.0

  roughness_cost:
    type: learning
    launch_cmd: "roslaunch context_adaptation cost_publisher.launch"
    launch_delay: 1.0

  mppi:
    type: controls
    launch_cmd: "roslaunch torch_mpc mppi.launch"
    launch_delay: 10.0

  mppi_throttle:
    type: controls
    launch_cmd: "roslaunch torch_mpc mppi_throttle.launch"
    launch_delay: 10.0

  mppi_shortrange:
    type: controls
    launch_cmd: "roslaunch torch_mpc mppi_shortrange.launch"
    launch_delay: 10.0

  remove_superodom:
    type: slam
    launch_cmd: "roslaunch torch_mpc remove_superodom.launch"
    launch_delay: 2.0

  superodom_lidar:
    type: slam
    launch_cmd: "roslaunch torch_mpc superodom_lidar.launch"
    launch_delay: 4.0

  rviz:
    type: viz
    launch_cmd: "rosrun rviz rviz -d ~/physics_atv_ws/rviz/top_down_gps_waypoints.rviz"
    launch_delay: 0.0

  velodynes:
    type: sensors
    launch_cmd: "roslaunch velodyne_launch velodyne_transformed"
    launch_delay: 0.0

  waypoint_manager:
    type: platform
    launch_cmd: "roslaunch yamaha_gps_utils mission_selector.launch"
    launch_delay: 4.0

  waypoint_graph_planner:
    type: platform
    launch_cmd: "roslaunch yamaha_gps_utils graph_planner.launch"
    launch_delay: 4.0

  sensors_all:
    type: platform
    on_atv: 1
    launch_cmd: "roslaunch launchers sensors.launch"
    launch_delay: 0.0

  joystick_drive:
    type: platform
    on_atv: 1
    launch_cmd: "reconnect_can & reconnect_can & roslaunch launchers joystick_drive.launch"
    launch_delay: 5.0

  joystick_vel_drive:
    type: platform
    on_atv: 1
    launch_cmd: "reconnect_can & reconnect_can & roslaunch launchers joystick_vel_drive.launch"
    launch_delay: 5.0

  generate_mission:
    type: platform
    launch_cmd: "roslaunch yamaha_gps_utils generate_mission.launch"
    launch_delay: 4.0

  multisense:
    type: platform
    launch_cmd: "roslaunch multisense_bringup multisense.launch"
    launch_delay: 1.0

other:
  record:
    type: data_collect
    launch_cmd: "atvbag"
    launch_delay: 15.0

  parv_record:
    type: data_collect
    launch_cmd: "parvatvbag"
    launch_delay: 15.0

  live_notes:
    type: data_collect
    launch_cmd: "python3 live_notes.py"

  topics_monitor:
    type: platform
    launch_cmd: "python3 topics_monitor.py"

#topic(s) to check for to know whether sensor is in bag
sensors:
  #should this be camera or multisense
  multisense:
    - '/multisense/right/image_rect'
    - '/multisense/left/image_rect'
  velodyne_1:
    - '/velodyne_1/velodyne_points'
  velodyne_2:
    - '/velodyne_2/velodyne_points'
  novatel:
    - '/odometry/filtered_odom'
    - '/novatel/imu/data'
  racepak:
    - '/shock_pos'
    - '/wheel_rpm'
algz:
  lidar_mapping:
    - '/local_gridmap'
  super_odometry:
    - '/integrated_to_init'
  lidar_stitching:
    - '/full_cloud'
  roughness_cost:
    - '/traversability_cost'
  tartanvo:
    - '/tartanvo_odom'
intervention: '/mux/intervention'
top_speed: '/odometry/filtered_odom'
keywords:
  context:
    - collect
    - test
    - learning_physics
    - sara
  condition:
    - sunny
    - snowy
    - muddy
